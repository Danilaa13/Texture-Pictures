import asyncio
from urllib.parse import urljoin
from playwright.async_api import async_playwright, TimeoutError
from MIXIN.mixin_log import log_with_time

async def kronospan_download_images_from_page(url: str) -> dict[str: str]:
    async with async_playwright() as playwright:
        print(log_with_time('–ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä'))
        browser = await playwright.chromium.launch(headless=True)
        page = await browser.new_page()


        try:
            print(log_with_time(f'–û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {url}'))
            await page.goto(url, wait_until='domcontentloaded', timeout=180000)
            print(log_with_time('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É'))


            await page.evaluate('window.scrollTo(0, document.body.scrollHeight);')
            await asyncio.sleep(2)


            collection_cards = await page.query_selector_all('div.collection-image')
            if not collection_cards:
                print(log_with_time('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–æ–∂–¥–∞—Ç—å –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ...'))
                await asyncio.sleep(5)
                collection_cards = await page.query_selector_all('div.collection-image')
            print(log_with_time(f'–ù–∞–π–¥–µ–Ω–æ {len(collection_cards)} –∫–æ–ª–ª–µ–∫—Ü–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.'))

            image_urls = {}

            for index, card in enumerate(collection_cards):
                print(log_with_time(f'üëâ –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ {index + 1}/{len(collection_cards)}'))
                await card.click()
                await asyncio.sleep(3)
                print(log_with_time(f'–ö–æ–ª–ª–µ–∫—Ü–∏—è {index + 1} –æ—Ç–∫—Ä—ã—Ç–∞, –Ω–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.'))

                await page.wait_for_selector('div.collections-item.ng-scope', timeout=10000)
                decor_items = await page.query_selector_all('div.collections-item.ng-scope')

                print(log_with_time(f'–ù–∞–π–¥–µ–Ω–æ {len(decor_items)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–µ–∫–æ—Ä–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.'))

                for decor in decor_items:

                    decor_number_el = await decor.query_selector('span.decor-number.ng-binding')
                    decor_title_el = await decor.query_selector('span.decor-title.ng-binding')
                    texture_els = await decor.query_selector_all('div.ng-binding.ng-scope')

                    if not decor_number_el or not decor_title_el:
                        continue

                    decor_number = await decor_number_el.inner_text()
                    decor_title = await decor_title_el.inner_text()
                    textures = [await tex.inner_text() for tex in texture_els]

                    texture_str = ''.join(textures)
                    full_name = f"{decor_number} {texture_str} {decor_title}".strip()

                    img = await decor.query_selector('img')
                    if img:
                        src = await img.get_attribute('src')
                        if src:
                            full_url = urljoin(url, src)
                            image_urls[full_name] = full_url
                            print(log_with_time(f'üñºÔ∏è {full_name} => {full_url}'))



            await browser.close()
            print(log_with_time(f'–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_urls)}'))
            return image_urls



        except TimeoutError:
            print(log_with_time('‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –ü—Ä–æ–≤–µ—Ä—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞.'))
            await browser.close()
            return []
